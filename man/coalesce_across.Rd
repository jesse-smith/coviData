% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/utils.R
\name{coalesce_across}
\alias{coalesce_across}
\title{Coalesce with \strong{tidyselect} Semantics}
\usage{
coalesce_across(.cols)
}
\arguments{
\item{.cols}{<\code{\link[dplyr:dplyr_tidy_select]{tidy-select}}> Columns to transform.
Because \code{across()} is used within functions like \code{summarise()} and
\code{mutate()}, you can't select or compute upon grouping variables.}
}
\value{
A vector the same length as the first \code{...} argument with
missing values replaced by the first non-missing value.
}
\description{
Given a set of data frame columns (potentially using
\code{\link[dplyr:dplyr_tidy_select]{<tidy-select>}}), \code{coalesce_across()}
finds the first non-missing value at each position.
}
\details{
\code{coalesce_across()} is a wrapper around
\code{\link[dplyr:coalesce]{coalesce()}} that allows specification of columns
using \code{<tidy-select>} semantics. It does this using
\code{\link[dplyr:across]{across()}}, which means it is only designed to work
inside \strong{dplyr} verbs. In other cases, just use \code{coalesce()}.
}
