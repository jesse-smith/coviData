% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/class-covidata.R
\name{covidata-cast}
\alias{covidata-cast}
\alias{as_ael}
\alias{as_nbs}
\alias{as_pcr}
\title{Cast Lists, Matrices, and More to Source-Specific Data Frames}
\usage{
as_ael(
  x,
  ...,
  .date = as.Date(NA),
  .rows = NULL,
  .name_repair = c("check_unique", "unique", "universal", "minimal"),
  rownames = pkgconfig::get_config("tibble::rownames", NULL)
)

as_nbs(
  x,
  ...,
  .date = as.Date(NA),
  .rows = NULL,
  .name_repair = c("check_unique", "unique", "universal", "minimal"),
  rownames = pkgconfig::get_config("tibble::rownames", NULL)
)

as_pcr(
  x,
  ...,
  .date = as.Date(NA),
  .rows = NULL,
  .name_repair = c("check_unique", "unique", "universal", "minimal"),
  rownames = pkgconfig::get_config("tibble::rownames", NULL)
)
}
\arguments{
\item{x}{A data frame, list, matrix, or other object that could reasonably be
coerced to a tibble.}

\item{...}{Unused, for extensibility.}

\item{.date}{A \code{Date} indicating when the data was made available. This
will usually come from name of the data file; the \code{coviData::load_*}
family detects this automatically when reading the data. This argument is
optional, but omitting it limits the ability of coviData functions to
handle data from several reporting dates.}

\item{.rows}{The number of rows, useful to create a 0-column tibble or
just as an additional check.}

\item{.name_repair}{Treatment of problematic column names:
\itemize{
\item \code{"minimal"}: No name repair or checks, beyond basic existence,
\item \code{"unique"}: Make sure names are unique and not empty,
\item \code{"check_unique"}: (default value), no name repair, but check they are
\code{unique},
\item \code{"universal"}: Make the names \code{unique} and syntactic
\item a function: apply custom name repair (e.g., \code{.name_repair = make.names}
for names in the style of base R).
\item A purrr-style anonymous function, see \code{\link[rlang:as_function]{rlang::as_function()}}
}

This argument is passed on as \code{repair} to \code{\link[vctrs:vec_as_names]{vctrs::vec_as_names()}}.
See there for more details on these terms and the strategies used
to enforce them.}

\item{rownames}{How to treat existing row names of a data frame or matrix:
\itemize{
\item \code{NULL}: remove row names. This is the default.
\item \code{NA}: keep row names.
\item A string: the name of a new column. Existing rownames are transferred
into this column and the \code{row.names} attribute is deleted.
Read more in \link[tibble]{rownames}.
}}
}
\description{
The \code{as_*} family of functions turns existing objects, such as a data
frame or matrix, into a \code{\link[tibble:tbl_df-class]{tibble}} of class
\code{ael}, \code{nbs}, or \code{pcr}. This is in contrast to the \code{ael()}, \code{nbs()}, and
\code{pcr()} functions, which build tibbles from individual columns. Recall that
\code{tibble} subclasses in coviData have a \code{.date} attribute, which assists in
handling data made available at different times; you'll need to supply this
when using \code{as_ael()}, \code{as_nbs()}, or \code{as_pcr()}.
}
\details{
These functions are thin wrappers around the \code{\link[tibble]{as_tibble}}
function; see there for details.
}
\seealso{
\code{\link[tibble]{as_tibble}}; \code{\link{ael}{ael()}},
\code{\link{nbs}{nbs()}}, and \code{\link{pcr}{pcr()}}
}
