% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert_to_xlsx.R
\name{convert_to_xlsx}
\alias{convert_to_xlsx}
\title{Convert a File to XLSX Format Natively in Excel}
\usage{
convert_to_xlsx(file, xlsx_file = NULL)
}
\arguments{
\item{file}{The path to a file readable by Excel}

\item{xlsx_file}{The path to the new xlsx file. The default only changes the
extension of \code{file} to '.xlsx'. \emph{Note: if \code{xlsx_file} does not end in
'.xlsx', the current extension (if any) will be dropped and '.xlsx' will
be appended to the path.}}
}
\value{
\code{xlsx_file}, as a tidy path (invisibly)
}
\description{
\code{convert_to_xlsx()} converts a given file to XLSX format using Excel's
"Save As" functionality. This replicates the output you'd get if you opened
the file and saved it manually.
}
\details{
This function solves the inverse problem of Excel's (in)famous changing of
data types; if your pipeline was built around Excel, you actually need to
consistently treat the data as Excel would, whether working interactively in
Excel or programmatically in R. There's no way of doing this natively in
\strong{R} (or any other language); \code{convert_to_xlsx()} creates and runs a
temporary VBA script that interfaces with Excel programmatically.

If you're starting a data pipeline from scratch, please don't use
this function. Just avoid Excel.
}
\keyword{internal}
